<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Elasticsearch5.X 教程 第一章]]></title>
    <url>%2F2017%2F10%2F14%2FElasticsearch5-X-%E6%95%99%E7%A8%8B-%E7%AC%AC%E4%B8%80%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[Elasticsearch5.X 教程（一） 基本安装Elasticsearch简单介绍 ES是一个高扩展的、开源的、全文检索的搜索引擎，它提供了近实时的索引、搜索、分析功能。 应用场景 它提供了强大的搜索功能，可以实现类似百度、谷歌等搜索。 可以搜索日志或者交易数据，用来分析商业趋势、搜集日志、分析系统瓶颈或者运行发展等等 可以提供预警功能（持续的查询分析某个数据，如果超过一定的值，就进行警告） 分析商业信息，在百万级的大数据中轻松的定位关键信息 具体细节不在这里说明，本博客以实际操作干货为主，相关概念请自行查阅相关资料 Elasticsearch官网 Elasticsearch的安装准备工作,使用的环境 Linux 操作系统（我这里用的centOS6.5，可以使用比这个版本高的系统，windows安装在这里不做介绍） Elasticsearch5.5.3 （主要是现在的springboot2.0.0.M5 支持，为后期讲解springboot + elasticsearch5.x 做铺垫） 安装JDK1.81这里说明一下，Elasticsearch5.x需要jdk1.8环境 卸载服务器自带的OpenJdk很多的服务器会自带OpenJdk，用命令 java -version查看版本，如果版本不匹配，大家卸载自带的OpenJdk，自行安装JDK1.8（推荐） 卸载过程（如果没有则忽略该步骤）：12345678910111213141516171819202122先查看 rpm -qa | grep java显示如下信息：java-1.4.2-gcj-compat-1.4.2.0-40jpp.115java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5卸载：rpm -e --nodeps java-1.4.2-gcj-compat-1.4.2.0-40jpp.115rpm -e --nodeps java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5还有一些其他的命令rpm -qa | grep gcjrpm -qa | grep jdk如果出现找不到openjdk source的话，那么还可以这样卸载yum -y remove java java-1.4.2-gcj-compat-1.4.2.0-40jpp.115yum -y remove java java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5卸载完成之后java -version如果显示如下信息,说明卸载完成-bash: java: command not found 我在卸载时遇到的坑1234567我卸载完成之后，使用java -version 没有任何反应，死活用不了java 指令检查发现，在.bashrc 中 创建了一个java指令的别名，指向了其他的一个地方！！！！解决方案： 注释掉.bashrc中多余的这个java指令。 大家如果遇到类似奇葩问题，可自行检查下。 安装Sun JDK 1.8 下载jdk1.8，上传到linux服务器。注意自己的系统是x64，还是x86，下载对应的版本,我这里用的是jdk-8u144-linux-x64.tar.gz 下载地址[Java SE Development Kit 8u144] 将jdk-8u144-linux-x64.tar.gz 解压到指定目录（我安装在/usr/local/jdk这个目录） 12345解压 jdk-8u144-linux-x64.tar.gztar -xvf jdk-8u144-linux-x64.tar.gz删除压缩包rm -rf jdk-8u144-linux-x64.tar.gz 配置环境变量 1234567891011121314151617vi /etc/profile在文件后面添加export JAVA_HOME=/usr/local/jdk/jdk1.8.0_144export JRE_HOME=/usr/local/jdk/jdk1.8.0_144/jreexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$PATH保存退出，然后使配置生效source /etc/profile检查jdk是否安装好 java -version打印出如下信息表示成功java version "1.8.0_144"Java(TM) SE Runtime Environment (build 1.8.0_144-b01)Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode) 安装ElasticSearch5.5.3&gt; 不同版本的ElasticSearch5可自行查看下载地址[Elastic Past Releases](https://www.elastic.co/downloads/past-releases) 下载ElasticSearch5.5.3。 1wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.3.tar.gz 将elasticsearch-5.5.3.tar.gz 解压到指定目录（我安装在/opt这个目录） 1tar -xvf elasticsearch-5.5.3.tar.gz 修改相关配置项（非必须） 由于我的服务器内存较小，所以调整一下内存配置 123456vi /opt/elasticsearch-5.5.3/bin/elasticsearch找到 # ES_JAVA_OPTS="-Xms8g -Xmx8g" ./bin/elasticsearch改成(注意，根据你们自己的服务器内存大小而定)ES_JAVA_OPTS="-Xms1g -Xmx1g" 启动elasticsearch 1/opt/elasticsearch-5.5.3/bin/elasticsearch 但是如果用root用户运行，会报错StartupException: java.lang.RuntimeException: can not run elasticsearch as root 解决方案：创建一个elastic用户和elastic用户组，将elasticsearch-5.5.3归属到elastic用户下。 123456789101112131415161718192021222324创建用户elasitcadduser elastic设置密码（我这里设置为elastic）[root@iZ1himax11jd0tZ bin]# passwd elasticChanging password for user elastic.New password: （elastic）BAD PASSWORD: The password is shorter than 8 charactersRetype new password: （elastic）passwd: all authentication tokens updated successfully.查看elastic所在的用户组是否是elastic[root@iZ1himax72jd0tZ bin]# groups elasticelastic : elastic如果不是，可执行命令 usermod -g elastic elastic将elasticsearch-5.5.3归属到elastic用户chown -R elastic:elastic /opt/elasticsearch-5.5.3切换到elastic用户，然后启动elasticsearch-5.5.3su elastic/opt/elasticsearch-5.5.3/bin/elasticsearch 如果运行成功，则会出现下面的结果 1234567891011121314151617181920212223242526272829[elastic@iZ1himax72jd0tZ bin]$ ./elasticsearch[2017-10-15T18:41:34,993][INFO ][o.e.n.Node ] [] initializing ...[2017-10-15T18:41:35,320][INFO ][o.e.e.NodeEnvironment ] [vEhoJly] using [1] data paths, mounts [[/ (rootfs)]], net usable_space [35.2gb], net total_space [39.2gb], spins? [unknown], types [rootfs][2017-10-15T18:41:35,320][INFO ][o.e.e.NodeEnvironment ] [vEhoJly] heap size [503.6mb], compressed ordinary object pointers [true][2017-10-15T18:41:35,321][INFO ][o.e.n.Node ] node name [vEhoJly] derived from node ID [vEhoJlyiTwW4h6IpnbhIqQ]; set [node.name] to override[2017-10-15T18:41:35,321][INFO ][o.e.n.Node ] version[5.5.3], pid[18752], build[9305a5e/2017-09-07T15:56:59.599Z], OS[Linux/3.10.0-514.26.2.el7.x86_64/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_144/25.144-b01][2017-10-15T18:41:35,322][INFO ][o.e.n.Node ] JVM arguments [-Xms2g, -Xmx2g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -Djdk.io.permissionsUseCanonicalPath=true, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Dlog4j.skipJansi=true, -XX:+HeapDumpOnOutOfMemoryError, -Xms512m, -Xmx512m, -Des.path.home=/opt/elasticsearch-5.5.3][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [aggs-matrix-stats][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [ingest-common][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [lang-expression][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [lang-groovy][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [lang-mustache][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [lang-painless][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [parent-join][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [percolator][2017-10-15T18:41:37,641][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [reindex][2017-10-15T18:41:37,642][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [transport-netty3][2017-10-15T18:41:37,642][INFO ][o.e.p.PluginsService ] [vEhoJly] loaded module [transport-netty4][2017-10-15T18:41:37,642][INFO ][o.e.p.PluginsService ] [vEhoJly] no plugins loaded[2017-10-15T18:41:41,283][INFO ][o.e.d.DiscoveryModule ] [vEhoJly] using discovery type [zen][2017-10-15T18:41:42,245][INFO ][o.e.n.Node ] initialized[2017-10-15T18:41:42,245][INFO ][o.e.n.Node ] [vEhoJly] starting ...[2017-10-15T18:41:42,603][INFO ][o.e.t.TransportService ] [vEhoJly] publish_address &#123;127.0.0.1:9300&#125;, bound_addresses &#123;127.0.0.1:9300&#125;[2017-10-15T18:41:42,629][WARN ][o.e.b.BootstrapChecks ] [vEhoJly] max file descriptors [65535] for elasticsearch process is too low, increase to at least [65536][2017-10-15T18:41:42,629][WARN ][o.e.b.BootstrapChecks ] [vEhoJly] max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144][2017-10-15T18:41:45,718][INFO ][o.e.c.s.ClusterService ] [vEhoJly] new_master &#123;vEhoJly&#125;&#123;vEhoJlyiTwW4h6IpnbhIqQ&#125;&#123;YvxaHVRpTjeyM9p1K_I8qw&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;, reason: zen-disco-elected-as-master ([0] nodes joined)[2017-10-15T18:41:45,758][INFO ][o.e.h.n.Netty4HttpServerTransport] [vEhoJly] publish_address &#123;127.0.0.1:9200&#125;, bound_addresses &#123;127.0.0.1:9200&#125;[2017-10-15T18:41:45,758][INFO ][o.e.n.Node ] [vEhoJly] started[2017-10-15T18:41:45,847][INFO ][o.e.g.GatewayService ] [vEhoJly] recovered [0] indices into cluster_state 常见问题汇总问题一12345[2016-11-06T16:27:21,712][WARN ][o.e.b.JNANatives ] unable to install syscall filter:Java.lang.UnsupportedOperationException: seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMPandCONFIG_SECCOMP_FILTERcompiledinatorg.elasticsearch.bootstrap.Seccomp.linuxImpl(Seccomp.java:349) ~[elasticsearch-5.5.3.jar:5.5.3]at org.elasticsearch.bootstrap.Seccomp.init(Seccomp.java:630) ~[elasticsearch-5.5.3.jar:5.5.3] 原因：报了一大串错误，大家不必惊慌，其实只是一个警告，主要是因为你Linux版本过低造成的。 解决方案： 重新安装新版本的Linux系统 警告不影响使用，可以忽略 问题二12ERROR: bootstrap checks failedsystem call filters failed to install; check the logs and fix your configuration or disable system call filters at your own risk 问题原因：因为Centos6不支持SecComp，而ES5.2.1默认bootstrap.system_call_filter为true进行检测，所以导致检测失败，失败后直接导致ES不能启动。 解决方法：在elasticsearch.yml中配置bootstrap.system_call_filter为false，注意要在Memory下面:12bootstrap.memory_lock: falsebootstrap.system_call_filter: false 问题三123ERROR: bootstrap checks failedmax file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536] 问题原因：无法创建本地文件问题,用户最大可创建文件数太小 解决方案：切换到root用户，编辑limits.conf配置文件， 添加类似如下内容：1234567891011vi /etc/security/limits.conf添加如下内容:* soft nofile 65536* hard nofile 131072* soft nproc 2048* hard nproc 4096备注：* 代表Linux所有用户名称保存、退出、重新登录才可生效 问题四1max number of threads [1024] for user [es] likely too low, increase to at least [2048] 原因：无法创建本地线程问题,用户最大可创建线程数太小解决方案：切换到root用户，进入limits.d目录下，修改90-nproc.conf 配置文件。1234567vi /etc/security/limits.d/90-nproc.conf找到如下内容：* soft nproc 1024#修改为* soft nproc 2048 问题五1max virtual memory areas vm.max_map_count [65530] likely too low, increase to east [262144] 原因：最大虚拟内存太小解决方案：切换到root用户下，修改配置文件sysctl.conf1234567891011vi /etc/sysctl.conf添加下面配置：vm.max_map_count=655360并执行命令：sysctl -p然后重新启动elasticsearch，即可启动成功。 问题六1org.elasticsearch.transport.RemoteTransportException: Failed to deserialize exception response from stream 原因:ElasticSearch节点之间的jdk版本不一致 解决方案：ElasticSearch集群统一jdk环境 问题七1Unsupported major.minor version 52.0 原因：jdk版本问题太低解决方案：更换jdk版本，ElasticSearch5.5.3支持jdk1.8.0 ElasticSearch 5.0.0 安装部署常见错误或问题]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch5.X</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo + github pages 建站教程]]></title>
    <url>%2F2017%2F09%2F22%2FHello%2F</url>
    <content type="text"><![CDATA[hexo + github pages 建站文章说明： 终于搭建完了自己的网站，下面把搭建过程记录一下，也分享给大家，更多的是总结过程，所以不会讲的特别细致。但是会引用很多有用的链接，告诉大家我是怎么一步一步搭建起来的。 1这里说明一下，我是从windows环境下搭建的。 搭建过程大致分为一下几步：一、准备工作 安装Node.JS 安装Hexo 安装git 注册一个github账号 准备工作这里就不做多的讲解，大家可以参考一下下面的链接，根据链接的教程完成即可。 史上最详细的Hexo博客搭建图文教程手把手教你用Hexo+Github 搭建属于自己的博客 注意： github现在没有Automatic page generator按钮，其实这一步你不用管就可以了。 注意github建立仓库的名称，一定要是username/username.github.io其中username是你的github账号的username。 二、将网页放到github的仓库中经过上面的教程应该大家伙能够在本地的http://localhost:4000看到自己的网站，但是怎么将网页放到github的仓库中呢？这一步比较关键，很多的教程没有说清楚，在这里我做一个补充。 2.1 在自己的网站目录下面打开git命令窗口。1为了后面的讲解方便，以后我会把网站目录称为web目录 这里之所以用git的命令行工具，是为了防止windows下出现无法识别命令的情况！ 2.2 至关重要的一步，生成ssh-key。检查本机是否有ssh key设置,有的话删除，没有的话接着看下一步。 1cd ~/.ssh 如果没有则提示： No such file or directory如果进来了这个目录，则 1rm * 然后cd 到web目录下面来（如果不知道怎么操作，关闭命令窗口，然后重复2.1操作） 生成key 123git config --global user.name "你的github账号" git config --global user.email "你的github邮箱" ssh-keygen -t rsa -C "你的github邮箱" 按3个回车，密码为空,查看你的ssh-rsa key。 1cat ~/.ssh/id_rsa.pub 可以看到key如： 123456789AAAAB3NzaC1yc2EAAAABIwAAAQEAyFWY3VgY8D4IDqQKO CW3bTovL7cZunWaCIl69A16POCJIpNSymEZw2wUYfGdvw mX93kp4xEqPK9/rX30duLfRWgMNV8/YE6AGZo90YXfMmt i/OXHvnTrHI82LgiabX6UH1QfXQhSAtq3AHWc4KIu/0Hc ZUYBgTalmpNlmsol7dgTpwMQPriwNdE65dc0ZeHUxY3cH NI+v5lXjSYlRBaoJnowY5qim4ld4hH2QGYNQ+GuzPXtCk BIbkG+uiADKrDyPVGOgjbC7To4BsKoIO2/0NkRCV0/G01 kL393oWmhhIlk/OhhJZ5Z6QnC1EubX/e9n0lglbdXo7St 8WjT4/3qtQ== xxx@gmail.com 把这段key保存到你的github上 添加后，在命令窗口中输入 1ssh -T git@github.com 来测试是否链接成功，当看到 1Hi XXX! You've successfully authenticated,but ... 说明已经配置好了。 注意：如果出错了， 请换以下的key再来测试一次(来就是你生成的上述key，去掉email地址)如：123456789AAAAB3NzaC1yc2EAAAABIwAAAQEAyFWY3VgY8D4IDqQKO CW3bTovL7cZunWaCIl69A16POCJIpNSymEZw2wUYfGdvw mX93kp4xEqPK9/rX30duLfRWgMNV8/YE6AGZo90YXfMmt i/OXHvnTrHI82LgiabX6UH1QfXQhSAtq3AHWc4KIu/0Hc ZUYBgTalmpNlmsol7dgTpwMQPriwNdE65dc0ZeHUxY3cH NI+v5lXjSYlRBaoJnowY5qim4ld4hH2QGYNQ+GuzPXtCk BIbkG+uiADKrDyPVGOgjbC7To4BsKoIO2/0NkRCV0/G01 kL393oWmhhIlk/OhhJZ5Z6QnC1EubX/e9n0lglbdXo7St 8WjT4/3qtQ== 2.3将网站上传到github在_config.yml文件中，找到Deployment，然后按照如下修改： 1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.gitbranch: master 如果使用git方式进行部署，执行 1npm install hexo-deployer-git --save 来安装所需的插件然后在当前目录打开命令行，输入： 1hexo d 随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。 然后通过http://yourname.github.io/来访问自己刚刚上传的网站。 三、余下的配置 个人觉得剩下的就没有什么可补充的了，给出以下资料，基本可以解决你在搭建博客过程中的问题。 Hero官网 Next主题配置]]></content>
      <categories>
        <category>博客建站</category>
      </categories>
      <tags>
        <tag>博客建站</tag>
      </tags>
  </entry>
</search>
